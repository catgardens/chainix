{
  lib,
  flake-parts-lib,
  ...
}:
with lib; let
  inherit (flake-parts-lib) mkPerSystemOption;
in {
  options = {
    perSystem = mkPerSystemOption ({
      config,
      pkgs,
      ...
    }: let
      cfg = config.neovim.plugins.lir;
    in {
      options = with lib.types; {
        neovim.plugins.lir = {
          enable = mkEnableOption "lir.nvim";
          package = mkPackageOption pkgs.vimPlugins "lir-nvim" {};
          deps = mkOption {
            type = types.listOf types.package;
            default = with pkgs.vimPlugins; [
              nvim-nonicons
              nvim-web-devicons
              plenary-nvim
            ];
          };
          config = mkOption {
            type = types.str;
            default = ''
              require("lir").setup {
                devicons = {
                  enable = true,
                },
              }
            '';
          };
        };
      };

      config = mkIf cfg.enable {
        neovim.build = {
          plugins = [cfg.package] ++ cfg.deps;
          runtimepath = mkAfter [
            (pkgs.writeTextFile rec {
              name = "lir.lua";
              destination = "/plugin/${name}";
              text = ''
                -- Generated by Nix
                ${cfg.config}
              '';
            })
          ];
        };
      };
    });
  };
}
