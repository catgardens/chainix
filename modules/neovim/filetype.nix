{
  lib,
  flake-parts-lib,
  neovim-lib,
  ...
}: let
  inherit (lib) mkOption;
  inherit (flake-parts-lib) mkPerSystemOption;
  inherit (neovim-lib) toLua;
in {
  options = {
    perSystem = mkPerSystemOption ({
      config,
      pkgs,
      ...
    }: {
      options = with lib.types; {
        neovim.build = {
          filetype = mkOption {
            internal = true;
            type = package;
          };
        };

        vim.filetype = let
          filetypeModule = oneOf [attrs str];
        in {
          extension = mkOption {
            type = attrsOf filetypeModule;
            default = {};
          };
          filename = mkOption {
            type = attrsOf filetypeModule;
            default = {};
          };
          pattern = mkOption {
            type = attrsOf filetypeModule;
            default = {};
          };
        };
      };

      config = {
        neovim.build.filetype = pkgs.writeTextFile {
          name = "filetype.lua";
          text = ''
            -- Generated by Nix (via github:willruggiano/neovim.nix)
            vim.filetype.add ${toLua config.vim.filetype}
          '';
        };
      };
    });
  };
}
